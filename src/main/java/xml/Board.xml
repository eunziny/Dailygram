<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kitri.daily.board.BoardMapper">

	<resultMap id="BoardResult" type="com.kitri.daily.board.Board">
		<result column="board_seq" property="board_seq" />
		<result column="writer" property="writer" />
		<result column="content" property="content" />
		<result column="posted" property="posted" />
		<result column="img" property="img" />
		<result column="public_yn" property="public_yn" />
		<result column="likecnt" property="likecnt" />
		<result column="sender" property="sender" />
	</resultMap>

	<resultMap id="LikeResult" type="com.kitri.daily.board.Like">
		<result column="board_seq" property="board_seq" />
		<result column="sender" property="sender" />
		<result column="type" property="type" />
		<result column="date" property="date" />
	</resultMap>

	<resultMap id="MemberResult" type="com.kitri.daily.member.Member">
		<result column="id" property="id" />
		<result column="pwd" property="pwd" />
		<result column="name" property="name" />
		<result column="birthday" property="birthday" />
		<result column="email" property="email" />
		<result column="address" property="address" />
		<result column="gender" property="gender" />
		<result column="joindate" property="joindate" />
		<result column="useyn" property="useyn" />
		<result column="profile_img" property="profile_img" />
		<result column="publicyn" property="publicyn" />
		<result column="intro" property="intro" />
	</resultMap>

	<resultMap id="CommentResult" type="com.kitri.daily.board.Comment">
		<result column="board_seq" property="board_seq" />
		<result column="com_seq" property="com_seq" />
		<result column="ref" property="ref" />
		<result column="lev" property="lev" />
		<result column="step" property="step" />
		<result column="pseq" property="pseq" />
		<result column="reply" property="reply" />
		<result column="content" property="content" />
	</resultMap>
	
	<resultMap id="relationsResult" type="com.kitri.daily.friend.Relationship">
		<result column="sender" property="sender" />
		<result column="receiver" property="receiver" />
		<result column="status" property="status" />
		<result column="date" property="date" />
	</resultMap>

	<select id="select" resultMap="BoardResult" parameterType="java.lang.Integer">
		select b.* , count(if(ls.type='L', ls.type, null)) likecnt from board
		b
		join like_siren ls on b.board_seq = ls.board_seq
		where b.board_seq = #{board_seq}
	</select>

	<insert id="insert" parameterType="com.kitri.daily.board.Board">
		insert into board (`writer`, `content`, `posted`, `img`, `public_yn`)
		values (#{writer}, #{content}, now(), #{img}, #{public_yn})
	</insert>

	<update id="update" parameterType="com.kitri.daily.board.Board">
		update board
		set
		content=#{content}, img=#{img}, public_yn=#{public_yn}
		where
		board_seq=#{board_seq}
	</update>



	<select id="myList" resultMap="BoardResult" parameterType="String">
		select * from board where writer=#{writer}
		order by posted desc
	</select>
<!-- 
	구독이거나 아무사이도 아닐 때 공개계정 공개게시물만 리스트로 뿌림 
	친구일때
	<select id="list" resultMap="BoardResult" parameterType="com.kitri.daily.board.Board">
		select a.*
		from
		(
		SELECT b.*
		FROM board b join relationship r
		on b.writer = r.receiver
		join member m
		on b.writer = m.id
		where b.writer=#{writer}
		and r.sender =#{sender}
		and b.public_yn='y'
		and m.publicyn='y'
		and r.status!='y'
        and now() >= date_add(b.posted, interval 1 minute)
		group by b.board_seq
		union
		SELECT b.*
		FROM board b join relationship r
		on b.writer = r.receiver
		where b.writer=#{writer}
		and r.sender =#{sender}
		and r.status='y'
        and now() >= date_add(b.posted, interval 1 minute)
		group by b.board_seq
		union
		SELECT b.*
		FROM board b join member m
		on b.writer = m.id
		where b.writer=#{writer}
		and b.public_yn='y'
		and m.publicyn='y'
        and now() >= date_add(b.posted, interval 1 minute)
		group by b.board_seq
		) a
		order by a.posted desc
	</select>
 -->
 	<select id="getStatus" resultType="String" parameterType="com.kitri.daily.board.Board">
 		(select publicyn from member
		where id = #{writer}) 
		union all
		(select status from relationship
		where sender = #{sender}
		and receiver = #{writer})
 	</select>
 	
 	<select id="publicyn" resultMap="BoardResult" parameterType="String">
 		select *
        from board
        where writer=#{writer}
        and now() >= date_add(posted, interval 1 minute)
 	</select>
 	
 	<select id="publicy" resultMap="BoardResult" parameterType="String">
 		select *
        from board
        where writer=#{writer}
        and now() >= date_add(posted, interval 1 minute)
        and public_yn='y';
 	</select>
 	
	<select id="myType" resultMap="LikeResult" parameterType="com.kitri.daily.board.Like">
		select * from like_siren
		where board_seq = #{board_seq}
		and sender = #{sender}
		and type = 'L'
		union
		select * from like_siren
		where board_seq =
		#{board_seq}
		and sender = #{sender}
		and type = 'S'
	</select>

	<delete id="delType" parameterType="com.kitri.daily.board.Like">
		delete
		from like_siren
		where
		board_seq = #{board_seq} and sender = #{sender}
	</delete>

	<insert id="addLike" parameterType="com.kitri.daily.board.Like">
		INSERT INTO like_siren
		(`board_seq`, `sender`, `type`, `date`)
		VALUES (#{board_seq}, #{sender}, 'L', now())
		ON DUPLICATE KEY UPDATE
		board_seq=#{board_seq}, sender=#{sender}, type='L', date=now();
	</insert>

	<insert id="addSiren" parameterType="com.kitri.daily.board.Like">
		INSERT INTO like_siren
		(`board_seq`, `sender`, `type`, `date`)
		VALUES (#{board_seq}, #{sender}, 'S', now())
		ON DUPLICATE KEY UPDATE
		board_seq=#{board_seq}, sender=#{sender}, type='S', date=now();
	</insert>

	<select id="friend" resultMap="MemberResult" parameterType="String">
		select m.*
		from member m join board b
		on m.id = b.writer
		where b.writer =
		#{writer}
		group by m.id
	</select>
	
	<select id="newsfeed" resultMap = "BoardResult">
		select *  from board
		where writer in(
			select receiver from relationship
			where sender=#{writer}
			and status in ('Y','R')
			)or writer=#{writer}
		order by posted desc
	</select>
	
	<insert id="insertTag" parameterType="com.kitri.daily.search.Hashtag">
    	insert into hashtag
		values(#{board_seq}, #{tagname}, #{block_yn})
	</insert> 
	
	<select id="selectById" resultMap="BoardResult" parameterType="String">
		select * from board
		where board_seq = (select max(board_seq) from board where writer=#{writer}) 
	</select>
	
	<delete id="dellikeSiren" parameterType="java.lang.Integer">
		delete from like_siren
		where board_seq = #{board_seq};
	</delete>
	
	<delete id="delHashtag" parameterType="java.lang.Integer">
		delete from hashtag
		where board_seq = #{board_seq};
	</delete>
	
	<delete id="delComment" parameterType="java.lang.Integer">
		delete from comment
		where board_seq = #{board_seq};
	</delete>
	
	<delete id="delBoard" parameterType="java.lang.Integer">
		delete from board
		where board_seq = #{board_seq};
	</delete>
	
	<select id="selectFriendProfileCount" resultType="Integer" parameterType="String">
		SELECT count(*)
		FROM relationship
		WHERE receiver=#{id}
		AND status='Y'
		union all
		SELECT count(*)
		FROM relationship
		WHERE sender=#{id}
		AND status='Y'
		union all
		SELECT count(*)
		FROM relationship
		WHERE sender=#{id}
		AND status='R'
	</select>
	
	<!-- <update id="delayUdate" parameterType="com.kitri.daily.board.Board">
		set sql_safe_updates = 0;
		update board
		set public_yn=#{public_yn}
		where public_yn='yd' or public_yn='nd'
		and board_seq=#{board_seq}
	</update> -->

	<select id="selectComments" resultMap="CommentResult"
		parameterType="java.lang.Integer">
		select * from comment
		where board_seq = #{board_seq}
		order by step
	</select>

	<insert id="insertNewComment" parameterType="com.kitri.daily.board.Comment">
		insert into comment
		(`board_seq`,`ref`,`lev`,`step`,`pseq`,`reply`,`content`,`writer`)
		select #{board_seq} ,ifnull(max(ref),0)+1, 0 , ifnull(max(step)+1,0) ,
		0 , 0
		,#{content},#{writer} from comment
		where board_seq = #{board_seq}
	</insert>

	<update id="updateStep" parameterType="com.kitri.daily.board.Comment">
		update comment set step = step+1
		where step > (select * from (select step from comment a where com_seq = #{com_seq}) a)
		and board_seq = #{board_seq}
	</update>
	
	<insert id="insertRepComment" parameterType="com.kitri.daily.board.Comment">
		insert into comment(`board_seq`,`ref`,`lev`,`step`,`pseq`,`reply`,`content`,`writer`)
		select #{board_seq} , ref , lev+1 , step+1 , #{com_seq} , 0 ,#{content} , #{writer} from comment
		where board_seq = #{board_seq}
		and com_seq =#{com_seq}
	</insert>
	
	<update id="updateReply" parameterType="com.kitri.daily.board.Comment">
		update comment set reply = reply+1
		where com_seq = #{com_seq}
	</update>

	<update id="updateComment" parameterType="com.kitri.daily.board.Comment">
		update comment set content = #{content}
		where com_seq = #{com_seq}
	</update>
	
	<update id="updateDownReply" parameterType="com.kitri.daily.board.Comment">
		update comment set reply = reply-1
		where com_seq = (
		select a.* from 
		(select pseq from comment 
		where com_seq =#{com_seq}) AS a
		)
	</update>
	
	<delete id="deleteComment" parameterType="com.kitri.daily.board.Comment">
		delete from comment where com_seq = #{com_seq}
	</delete>
	
	<update id="updateDownStep" parameterType="com.kitri.daily.board.Comment">
		update comment set step= step-1
		where step > (select * from (select step from comment a where com_seq = #{com_seq}) a)
		and board_seq = #{board_seq} 
	</update>
	
	<select id="selectcheckRelation" parameterType="com.kitri.daily.friend.Relationship" resultType="String">
		SELECT status
		FROM relationship
		WHERE sender=#{sender}
		AND receiver=#{receiver}
	</select>
</mapper>