<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kitri.daily.friend.FriendMapper">

	<resultMap id="FriendResult" type="com.kitri.daily.friend.Friend">
		<result column="id" property="id" />
		<result column="profile_img" property="profile_img" />
		<result column="intro" property="intro" />
		<result column="tag1" property="tag1" />
		<result column="tag2" property="tag2" />
		<result column="tag3" property="tag3" />
		<result column="tag4" property="tag4" />
		<result column="tag5" property="tag5" />
	</resultMap>
	
	<select id="selectFriendRelationshipCount" resultType="java.util.HashMap" parameterType="String">
		select count(*) cnt from like_siren
	      where sender = #{id}
	      union
	      select count(*) from relationship
	      where sender = #{id}
	      and status
	      in ('y','r')
	</select>
	
	<select id="selectRecommend" resultMap="FriendResult" parameterType="String">
		SELECT DISTINCT m.id, m.profile_img
		FROM member m,(SELECT b.board_seq, b.posted, b.writer
						FROM board b, (SELECT board_seq, count(*) 'like', date
									FROM like_siren
		                            WHERE type='L'
									GROUP BY board_seq
									ORDER BY count(*) DESC) l
						WHERE DATE(posted) >= date_add(now(), interval -30 day)
						AND b.board_seq = l.board_seq
						ORDER BY posted DESC) bb
		WHERE m.id = bb.writer
		AND m.publicyn='y'
		AND m.useyn='y'
		AND m.id NOT LIKE #{id} 
	</select>
	
	<select id="selectUserIntro" resultType="String" parameterType="String">
		SELECT intro FROM member WHERE id = #{id} 
	</select>
	
	<select id="selectRecommendHT1" resultMap="FriendResult" parameterType="String">
		SELECT id, profile_img FROM member 
		WHERE intro like CONCAT('%', #{tag1}, '%') AND id NOT LIKE #{id}
		AND id not in( select receiver from relationship
			  where sender = #{id}
			  and status
			  in ('y','r')
			  )
		AND useyn='y'
	</select>
	
	<select id="selectRecommendHT2" resultMap="FriendResult" parameterType="com.kitri.daily.friend.Friend">
		SELECT id, profile_img FROM member 
		WHERE (intro like CONCAT('%', #{tag1}, '%') OR intro like CONCAT('%', #{tag2}, '%')) 
		AND id NOT LIKE #{id} 
		AND id not in( select receiver from relationship
			  where sender = #{id}
			  and status
			  in ('y','r')
			  )
		AND useyn='y'
	</select>
	
	<select id="selectRecommendHT3" resultMap="FriendResult" parameterType="com.kitri.daily.friend.Friend">
		SELECT id, profile_img FROM member 
		WHERE (intro like CONCAT('%', #{tag1}, '%') OR intro like CONCAT('%', #{tag2}, '%') OR intro like CONCAT('%', #{tag3}, '%')) 
		AND id NOT LIKE #{id} 
		AND id not in( select receiver from relationship
			  where sender = #{id}
			  and status
			  in ('y','r')
			  )
		AND useyn='y'
	</select>
	
	<select id="selectRecommendHT4" resultMap="FriendResult" parameterType="com.kitri.daily.friend.Friend">
		SELECT id, profile_img FROM member 
		WHERE (intro like CONCAT('%', #{tag1}, '%') OR intro like CONCAT('%', #{tag2}, '%') 
				OR intro like CONCAT('%', #{tag3}, '%') OR intro like CONCAT('%', #{tag4}, '%')) 
		AND id NOT LIKE #{id} 
		AND id not in( select receiver from relationship
			  where sender = #{id}
			  and status
			  in ('y','r')
			  )
		AND useyn='y'
	</select>
	
	<select id="selectRecommendHT5" resultMap="FriendResult" parameterType="com.kitri.daily.friend.Friend">
		SELECT id, profile_img FROM member 
		WHERE (intro like CONCAT('%', #{tag1}, '%') OR intro like CONCAT('%', #{tag2}, '%')) 
				OR intro like CONCAT('%', #{tag3}, '%') OR intro like CONCAT('%', #{tag4}, '%')
				OR intro like CONCAT('%', #{tag5}, '%')) 
		AND id NOT LIKE #{id} 
		AND id not in( select receiver from relationship
			  where sender = #{id}
			  and status
			  in ('y','r')
			  )
		AND useyn='y'
	</select>
	
	<select id="selectRecommend2" resultMap="FriendResult" parameterType="String">
		SELECT DISTINCT m.id, m.profile_img
		FROM member m,(SELECT b.board_seq, b.posted, b.writer
						FROM board b, (SELECT board_seq, count(*) 'like', date
									FROM like_siren
		                            WHERE type='L'
									GROUP BY board_seq
									ORDER BY count(*) DESC) l
						WHERE DATE(posted) >= date_add(now(), interval -30 day)
						AND b.board_seq = l.board_seq
						ORDER BY posted DESC) bb
		WHERE m.id = bb.writer
		AND m.publicyn='y'
		AND m.useyn='y'
		AND m.id NOT LIKE #{id}
		AND id not in( select receiver from relationship
			  where sender = #{id}
			  and status
			  in ('y','r')
			  )
	</select>

</mapper>